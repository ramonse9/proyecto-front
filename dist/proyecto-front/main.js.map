{"version":3,"sources":["./src/app/pages/tablero/tablero.component.ts","./src/app/pages/tablero/tablero.component.html","./src/app/services/tiendas.service.ts","./src/app/services/articulos.service.ts","./src/environments/environment.ts","./src/app/services/inventario.service.ts","./src/app/pages/articulos/articulos.component.ts","./src/app/pages/articulos/articulos.component.html","./src/app/pages/tiendas/tiendas.component.ts","./src/app/pages/tiendas/tiendas.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/categorias.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/pages/inventario/inventario.component.ts","./src/app/pages/inventario/inventario.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { InventarioService } from 'src/app/services/inventario.service';\nimport lodash from 'lodash';\n\n@Component({\n  selector: 'app-tablero',\n  templateUrl: './tablero.component.html',\n  styleUrls: ['./tablero.component.css']\n})\nexport class TableroComponent implements OnInit {\n\n  public inventario: any = [];\n  public inventarioTemp: any = [];\n  public cargandoInventario = true;\n  private tipoOrden: string = 'nombre';\n\n  public seleccionTienda = \"Tienda\";\n\n  public filtroTiendas : any = [];\n\n  constructor(  private inventarioService: InventarioService ) { }\n\n  ngOnInit(): void {\n    this.cargarInventario();\n\n  }\n\n  cargarInventario(){\n\n    this.cargandoInventario = true;\n\n    this.inventarioService.cargarInventario()\n          .subscribe( resp =>{\n            this.inventario = resp;\n            this.inventarioTemp = resp;\n            this.cargandoInventario = false;\n            \n            this.filtroTiendas = [ ...new Set( this.inventario.map( i => i.NOMBRE_TIENDA )) ];\n\n            this.filtroTiendas.unshift('Tienda');\n\n          });\n  }\n\n  buscar(termino: string )\n  {\n    \n    this.seleccionTienda = \"Tienda\";\n\n    if(termino.trim().length == 0){\n\n      this.inventarioTemp = this.inventario;       \n\n      return;\n    }\n\n    this.inventarioTemp = this.inventario.filter( i => i.NOMBRE_ARTICULO.toLowerCase().indexOf( termino.trim().toLowerCase() ) > -1 );\n    \n  }\n\n  get inventarioOrdenado(){\n   \n      return lodash.sortBy( this.inventarioTemp, this.tipoOrden);\n   \n  }\n\n  ordenar( tipoOrden: string){\n    this.tipoOrden = tipoOrden;\n  }\n\n  filtrarTienda(event: any ){\n\n    const seleccionado = event.target.value;\n\n    if( seleccionado == \"Tienda\" ){\n \n      this.inventarioTemp = this.inventario;\n      return;\n    }\n    this.inventarioTemp = this.inventario.filter( t => t.NOMBRE_TIENDA === seleccionado );\n\n  }\n\n}\n","<div class=\"row animated fadeIn fast\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n      \n                <input type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"Buscar articulo...\"                       \n                        \n                        (keyup)=\"buscar( txtTermino.value) \"\n                        #txtTermino/>                          \n               \n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row animated fadeIn fast\"\n        *ngIf=\"cargandoInventario\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-info text-center\">\n            <h4 class=\"alert-heading\">Cargando</h4>\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\n            <p class=\"mb-0\">Por favor espere</p>           \n        </div>\n                \n    </div>\n</div>\n\n<div class=\"row animated fadeIn fast\"\n    *ngIf=\"!cargandoInventario\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n             \n                <h4 class=\"card-title\">Articulos Registrados en Tiendas (<span class=\"badge badge-primary\"><strong> {{inventarioOrdenado.length || 0}}</strong></span>)</h4>\n                \n                <small class=\"badge badge-info\" >*Seleccione la tienda para filtrar</small>\n                <select class=\"custom-select b-0 cursor \"\n                            (change)=\"filtrarTienda($event)\"\n                            [(ngModel)]='seleccionTienda'>                                    \n                        <option *ngFor=\"let fr of filtroTiendas\" >\n                            {{fr}}                                                                            \n                        </option>                                   \n                </select>\n\n                \n                <div class=\"table-responsive\">\n                    <small class=\"badge badge-success\" >*Click en el encabezado para ordenar</small>\n                    <table class=\"table table-bordered table-hover\">\n                        <thead>\n                            <tr>\n                                <th (click)=\"ordenar('ID_TIENDA')\" class=\"cursor\">Tienda</th>\n                                <th (click)=\"ordenar('NOMBRE_TIENDA')\" class=\"cursor\">Tienda Nombre</th>\n                                <th (click)=\"ordenar('ID_ARTICULO')\" class=\"cursor\">Articulo</th>\n                                <th (click)=\"ordenar('NOMBRE_ARTICULO')\" class=\"cursor\">Articulo Nombre</th>\n                                <th (click)=\"ordenar('ID_CATEGORIA')\" class=\"cursor\">Categoria</th>\n                                <th (click)=\"ordenar('NOMBRE_CATEGORIA')\" class=\"cursor\">Categoria Nombre</th>\n                                <th (click)=\"ordenar('CANTIDAD')\" class=\"cursor\">Cantidad</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let i of inventarioOrdenado\">\n                                <td>{{ i.ID_TIENDA }}</td>\n                                <td>\n                                    <strong>\n                                        {{ i.NOMBRE_TIENDA }}\n                                    </strong> \n                                </td>                               \n                                <td>{{ i.ID_ARTICULO}}</td>\n                                <td>\n                                    <strong>\n                                        {{ i.NOMBRE_ARTICULO }}\n                                    </strong> \n                                </td>\n                                <td>{{ i.ID_CATEGORIA}}</td>\n                                <td>\n                                    <strong>\n                                        {{ i.NOMBRE_CATEGORIA }}\n                                    </strong> \n                                </td>\n                                <td>{{ i.CANTIDAD}}</td>\n                            </tr> \n                        </tbody>\n                    </table>\n\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nconst base_url = environment.base_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TiendasService {\n\n  constructor( private http: HttpClient ) { }\n\n  cargarTiendas(){\n    const url = `${ base_url }/tiendas`;\n\n    return this.http.get( url )\n          .pipe(\n            map( (resp: {ok: boolean, Tiendas: any}) => {\n              return resp.Tiendas\n            })\n          )\n  }\n\n  crearTienda( tienda : { nombre: string } ){\n\n    const url = `${ base_url }/tiendas`;\n    return this.http.post( url,  tienda );\n  }\n\n  actualizarTienda( ID_TIENDA: number, NOMBRE:string ){\n    const url = `${ base_url }/tiendas/${ID_TIENDA}`;\n    return this.http.put( url, { NOMBRE } );\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nconst base_url = environment.base_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticulosService {\n\n  constructor(private http: HttpClient) { }\n\n  cargarArticulos(){\n    const url = `${ base_url }/articulos`;\n\n    return this.http.get( url )\n          .pipe(\n            map( (resp: {ok: boolean, Articulos: any}) => {\n              return resp.Articulos\n            })\n          )\n  }\n\n  crearArticulo( articulo : { nombre: string, id_categoria: number } ){\n\n    const url = `${ base_url }/articulos`;\n    return this.http.post( url,  articulo );\n  }\n\n  actualizarArticulo( ID_ARTICULO: number, NOMBRE_ARTICULO:string, ID_CATEGORIA:number ){\n\n    const url = `${ base_url }/articulos/${ID_ARTICULO}`;\n    return this.http.put( url, { NOMBRE_ARTICULO, ID_CATEGORIA} );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_url: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nconst base_url = environment.base_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventarioService {\n\n  constructor(private http: HttpClient) { }\n\n  cargarInventario(){\n    const url = `${ base_url }/inventario`;\n\n    return this.http.get( url )\n          .pipe(\n            map( (resp: {ok: boolean, Inventario: any}) => {\n              return resp.Inventario\n            })\n          )\n  }\n\n  crearInventario( inventario : { id_tienda, id_articulo, cantidad: number } ){\n    const url = `${ base_url }/inventario`;\n    return this.http.post( url, inventario );\n  }\n\n  actualizarInventario( ID_INVENTARIO: number, ID_TIENDA: number, ID_ARTICULO: number,  CANTIDAD: number ){\n    const url = `${ base_url }/inventario/${ID_INVENTARIO}`;\n    return this.http.put( url, {  ID_TIENDA, ID_ARTICULO, CANTIDAD } );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ArticulosService } from 'src/app/services/articulos.service';\nimport { CategoriasService } from 'src/app/services/categorias.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-articulos',\n  templateUrl: './articulos.component.html',\n  styles: [\n  ]\n})\nexport class ArticulosComponent implements OnInit {\n\n  \n  public articuloForm: FormGroup;\n\n  public articulos : any = [];\n  public categorias : any = [];\n\n  public cargandoCategorias = true;\n  public cargandoArticulos = true;\n\n\n  constructor(private fb: FormBuilder\n    , private articuloService: ArticulosService\n    , private categoriaService: CategoriasService) { }\n\n  async ngOnInit() {\n\n    this.articuloForm = this.fb.group({\n     \n      nombre: ['', Validators.required ],\n      categoria: ['', Validators.required]\n\n    });\n\n    await this.cargarCategorias();\n    await this.cargarArticulos();\n\n  }\n\n  async cargarArticulos(){\n\n    this.cargandoArticulos = true;\n\n    const respArticulos = await this.articuloService.cargarArticulos().toPromise();\n\n    this.articulos = respArticulos\n    \n    this.cargandoArticulos = false;\n  }  \n\n  async agregarArticulo(){\n\n    const { nombre, categoria } = this.articuloForm.value;\n\n    const id_categoria = categoria;\n\n    const articulo = {\n      nombre,\n      id_categoria\n    }\n    \n    await this.articuloService.crearArticulo( articulo ).toPromise();\n    \n    await this.cargarArticulos();\n  }\n\n  async guardarCambios( a: any){\n    \n    await this.articuloService.actualizarArticulo( a.ID_ARTICULO, a.NOMBRE_ARTICULO, a.ID_CATEGORIA ).toPromise();\n    \n    Swal.fire( 'Actualizado', a.NOMBRE_ARTICULO );\n                \n    await this.cargarArticulos();\n              \n  }\n\n  async cargarCategorias(){\n    this.cargandoCategorias = true;\n\n    const respCategorias = await this.categoriaService.cargarCategorias().toPromise();\n\n    this.categorias = respCategorias\n    \n    this.cargandoCategorias = false;\n\n  }\n\n}\n","<form class=\"form-horizontal p-t-20\"\n    [formGroup]=\"articuloForm\"\n    (submit)=\"agregarArticulo()\"> \n\n    <div class=\"form-group row\">                                                                                \n        <div class=\"col-sm-5\">\n            <div class=\"input-group\">                \n                <input type=\"text\" class=\"form-control\" formControlName=\"nombre\" placeholder=\"Nombre\">\n            </div>\n        </div>        \n    </div>\n\n    <div class=\"form-group row animated fadeIn\" >       \n        <div class=\"col-sm-5\">\n            <div class=\"input-group\">    \n                <select class=\"form-control\"\n                            formControlName=\"categoria\">\n                    <option value=\"\">Seleccione Categoria</option>\n                    <option *ngFor=\"let c of categorias\" [value]=\"c.ID_CATEGORIA\">{{ c.NOMBRE }}</option>\n                </select>                                \n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"form-group row\">        \n\n        <div class=\"col-sm-9 align-self-end\">\n            <button type=\"submit\" \n                class=\"btn btn-success waves-effect waves-light\"\n                [disabled]=\"articuloForm.invalid\">\n                <i class=\"fa fa-plus-circle\"></i>\n                Nuevo Articulo\n            </button>            \n        </div>\n    </div>  \n</form>\n\n<div class=\"row animated fadeIn fast\"\n        *ngIf=\"cargandoArticulos\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-info text-center\">\n            <h4 class=\"alert-heading\">Cargando</h4>\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\n            <p class=\"mb-0\">Por favor espere</p>           \n        </div>\n                \n    </div>\n</div>\n<div class=\"table-responsive scroll-y\" *ngIf=\"!cargandoArticulos\">\n    <span >\n        <table class=\"table m-t-0 table-hover animated fadeIn\">\n            <thead>\n                <tr>\n                    <th>Nombre</th>\n\n                    <th>Categoria</th>\n                               \n                    <th>Acciones</th>\n                </tr>\n            </thead>\n            <tbody >                                                 \n                <tr *ngFor=\"let a of articulos\" class=\"footable-odd\">                  \n                    <td>\n                        <input type=\"text\" \n                                class=\"form-control\" \n                                placeholder=\"Nombre del articulo\"\n                                [(ngModel)]=\"a.NOMBRE_ARTICULO\"\n                        />\n                    </td>\n                    <td>\n                        {{a.NOMBRE_CATEGORIA}}\n                    </td>\n                    <td class=\"text-nowrap text-center\">                        \n                        <span (click)=\"guardarCambios( a )\" data-toggle=\"tooltip\" data-original-title=\"Guardar cambios\"><i class=\"fa fa-pencil ext-inverse m-r-10 cursor\"></i></span>\n                        \n                    </td>                                            \n                </tr>                                                         \n            </tbody>              \n        </table>\n    </span> \n</div>   \n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TiendasService } from 'src/app/services/tiendas.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-tiendas',\n  templateUrl: './tiendas.component.html',\n  styleUrls: ['./tiendas.component.css']\n})\nexport class TiendasComponent implements OnInit {\n\n  public tiendaForm: FormGroup;\n\n  public tiendas : any = [];\n\n  public cargandoTiendas = true;\n\n  constructor( private fb: FormBuilder\n              ,private tiendaService: TiendasService ) { }\n\n  async ngOnInit() {\n\n    this.tiendaForm = this.fb.group({\n     \n      nombre: ['', Validators.required ]\n\n    });\n\n    await this.cargarTiendas();\n\n  }\n  \n  async cargarTiendas(){\n\n    this.cargandoTiendas = true;\n\n    const respTiendas = await this.tiendaService.cargarTiendas().toPromise();\n\n    this.tiendas = respTiendas\n    \n    this.cargandoTiendas = false;\n  }\n\n  async agregarTienda(){\n\n    const { nombre } = this.tiendaForm.value;\n\n    const tienda = {\n      nombre\n    }\n\n    await this.tiendaService.crearTienda( tienda ).toPromise();\n\n    await this.cargarTiendas();\n \n  }\n\n  guardarCambios( t: any){\n\n    this.tiendaService.actualizarTienda( t.ID_TIENDA, t.NOMBRE )\n              .subscribe( resp => {\n\n                Swal.fire( 'Actualizado', t.NOMBRE );\n\n              });\n  }\n\n}\n","<form class=\"form-horizontal p-t-20\"\n    [formGroup]=\"tiendaForm\"\n    (submit)=\"agregarTienda()\"> \n\n    <div class=\"form-group row\">                                                                                \n        <div class=\"col-sm-5\">\n            <div class=\"input-group\">                \n                <input type=\"text\" class=\"form-control\" formControlName=\"nombre\" placeholder=\"Nombre\">\n            </div>\n        </div>        \n    </div>\n\n    <div class=\"form-group row\">        \n\n        <div class=\"col-sm-9 align-self-end\">\n            <button type=\"submit\" \n                class=\"btn btn-success waves-effect waves-light\"\n                [disabled]=\"tiendaForm.invalid\">\n                <i class=\"fa fa-plus-circle\"></i>\n                Nueva Tienda\n            </button>\n            \n        </div>\n\n    </div>\n\n  \n</form>\n\n<div class=\"row animated fadeIn fast\"\n        *ngIf=\"cargandoTiendas\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-info text-center\">\n            <h4 class=\"alert-heading\">Cargando</h4>\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\n            <p class=\"mb-0\">Por favor espere</p>           \n        </div>\n                \n    </div>\n</div>\n\n<div class=\"table-responsive scroll-y\" *ngIf=\"!cargandoTiendas\" >\n    <span *ngIf=\"tiendas.length == 0\">No hay tiendas registradas</span>\n    <span *ngIf=\"tiendas.length > 0\">         \n        <table class=\"table m-t-0 table-hover animated fadeIn\">\n            <thead>\n                <tr>\n                    <th>Nombre</th>\n                               \n                    <th>Acciones</th>\n                </tr>\n            </thead>\n            <tbody >                                                 \n                <tr *ngFor=\"let t of tiendas\" class=\"footable-odd\">                  \n                    <td>\n                        <input type=\"text\" \n                                class=\"form-control\" \n                                placeholder=\"Nombre de la tienda\"\n                                [(ngModel)]=\"t.NOMBRE\"\n                        />\n                    </td>\n                    <td class=\"text-nowrap text-center\">\n                        <span (click)=\"guardarCambios( t )\" data-toggle=\"tooltip\" data-original-title=\"Guardar cambios\"><i class=\"fa fa-pencil ext-inverse m-r-10 cursor\"></i></span>\n\n                    </td>                                            \n                </tr>                                                         \n            </tbody>              \n        </table>\n    </span> \n</div>   \n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'proyecto-front';\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div id=\"main-wrapper\">\n\n  <div class=\"page-wrapper\">\n\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n     \n     \n    \n      <div >\n        <ul class=\"navbar-nav mr-auto\">\n\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" routerLink = \"/tiendas\" routerLinkActive=\"active\">Tiendas</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink= \"/articulos\" routerLinkActive=\"active\">Articulos</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink= \"/inventario\" routerLinkActive=\"active\">Inventario</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink= \"/taablero\" routerLinkActive=\"active\">Tablero</a>\n          </li>        \n        \n        </ul>\n        \n      </div>\n    </nav>\n\n\n\n    <div class=\"container-fluid\">     \n\n      <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                   <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n      </div>\n\n    \n    </div> \n\n  </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nconst base_url = environment.base_url;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  constructor( private http: HttpClient ) { }\n\n  cargarCategorias(){\n    const url = `${ base_url }/categorias`;\n\n    return this.http.get( url )\n          .pipe(\n            map( (resp: {ok: boolean, Categorias: any}) => {\n              return resp.Categorias\n            })\n          )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ArticulosComponent } from './pages/articulos/articulos.component';\nimport { TiendasComponent } from './pages/tiendas/tiendas.component';\nimport { InventarioComponent } from './pages/inventario/inventario.component';\nimport { TableroComponent } from './pages/tablero/tablero.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport {  FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ArticulosComponent,\n    TiendasComponent,\n    InventarioComponent,\n    TableroComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,   \n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ArticulosComponent } from './pages/articulos/articulos.component';\nimport { InventarioComponent } from './pages/inventario/inventario.component';\nimport { TableroComponent } from './pages/tablero/tablero.component';\nimport { TiendasComponent } from './pages/tiendas/tiendas.component';\n\nconst routes: Routes = [\n  { path: 'tablero', component: TableroComponent },\n  { path: 'articulos', component: ArticulosComponent },\n  { path: 'tiendas', component: TiendasComponent },\n  { path: 'inventario', component: InventarioComponent },\n  { path: '', redirectTo: '/tablero', pathMatch: 'full' },\n  { path: '**', redirectTo: '/tablero', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot( routes ),\n  \n    \n  ],\n  exports: [ RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ArticulosService } from 'src/app/services/articulos.service';\nimport { CategoriasService } from 'src/app/services/categorias.service';\nimport { InventarioService } from 'src/app/services/inventario.service';\nimport { TiendasService } from 'src/app/services/tiendas.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-inventario',\n  templateUrl: './inventario.component.html',\n  styleUrls: ['./inventario.component.css']\n})\nexport class InventarioComponent implements OnInit {\n\n  public inventarioForm: FormGroup;\n\n  public tiendas : any = [];\n  public articulos: any = [];\n  public categorias: any = [];\n  public inventario: any = [];\n\n  public seleccionCategoria = '';\n\n  public cargandoInventario = true;\n\n  constructor( private fb: FormBuilder\n             , private tiendaService: TiendasService\n             , private articuloService: ArticulosService\n             , private categoriaService: CategoriasService\n             , private inventarioService: InventarioService ) { }\n\n  ngOnInit(): void {\n    this.inventarioForm = this.fb.group({\n     \n      tienda: ['', Validators.required ],\n      articulo: ['', Validators.required ],\n      cantidad: ['', Validators.required ]\n\n    });\n\n    this.cargarTiendas();\n    this.cargarArticulos();\n    this.cargarCategorias();\n    this.cargarInventario();\n\n    this.inventarioForm.get('articulo').valueChanges\n            .subscribe( articulo => {\n\n              if(articulo==''){\n                this.seleccionCategoria = '';\n                return;\n              } \n          \n              this.seleccionCategoria = this.articulos.find( a=> a.ID_ARTICULO == articulo ).NOMBRE_CATEGORIA;\n              \n            });\n  }\n\n  cargarTiendas(){   \n\n    this.tiendaService.cargarTiendas()\n          .subscribe( resp =>{\n            this.tiendas = resp;\n   \n          })\n  }\n\n  cargarArticulos(){    \n\n    this.articuloService.cargarArticulos()\n          .subscribe( resp =>{\n            this.articulos = resp;\n           \n          })\n  }\n\n  cargarCategorias(){\n\n    this.categoriaService.cargarCategorias()\n          .subscribe( resp =>{\n            this.categorias = resp;\n          })\n  }\n\n  cargarInventario(){\n\n    this.cargandoInventario = true;\n\n    this.inventarioService.cargarInventario()\n          .subscribe( resp =>{\n            this.inventario = resp;\n            this.cargandoInventario = false;     \n          });\n  }\n\n  async agregarInventario(){\n\n    const { tienda, articulo, cantidad  } = this.inventarioForm.value;\n  \n    const id_tienda = tienda;\n    const id_articulo = articulo;\n\n    const inventario = {\n      id_tienda,\n      id_articulo,\n      cantidad\n    }\n    \n    const respInventario = await this.inventarioService.crearInventario( inventario ).toPromise();\n\n    this.inventarioForm.get('tienda').setValue('');\n    this.inventarioForm.get('articulo').setValue('');\n    this.inventarioForm.get('cantidad').setValue('');\n\n    await this.cargarInventario();\n  }\n\n  async guardarCambios(i: any){\n    \n    await this.inventarioService.actualizarInventario( i.ID_INVENTARIO, i.ID_TIENDA, i.ID_ARTICULO, i.CANTIDAD ).toPromise();\n    \n    Swal.fire( 'Actualizado', i.CANTIDAD );\n                \n    await this.cargarInventario();\n\n  }\n\n}\n","<form class=\"form-horizontal p-t-20\"\n    [formGroup]=\"inventarioForm\"\n    (submit)=\"agregarInventario()\"> \n\n    <div class=\"form-group row animated fadeIn\" >       \n        <div class=\"col-sm-5\">\n            <div class=\"input-group\">    \n                <select class=\"form-control\"\n                            formControlName=\"tienda\">\n                    <option value=\"\">Seleccione Tienda</option>\n                    <option *ngFor=\"let t of tiendas\" [value]=\"t.ID_TIENDA\">{{ t.NOMBRE }}</option>\n                </select>                                \n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group row animated fadeIn\" >       \n        <div class=\"col-sm-5\">\n            <div class=\"input-group\">    \n                <select class=\"form-control\"\n                            formControlName=\"articulo\">\n                    <option value=\"\">Seleccione Artículo</option>\n                    <option *ngFor=\"let a of articulos\" [value]=\"a.ID_ARTICULO\">{{ a.NOMBRE_ARTICULO }}</option>\n                </select>                                \n            </div>\n        </div>\n    </div>\n\n    <span *ngIf=\"seleccionCategoria ! ''\" class=\"animated fadeIn\">\n        \n        <div class=\"form-group row\">\n            <span class=\"col-sm-2 control-label\">Categoría: </span>\n            <span class=\"col-sm-3 control-label\">{{ seleccionCategoria }}</span>        \n        </div>\n\n    </span>\n\n    <div class=\"form-group row\">                                                                                \n        <div class=\"col-sm-5\">\n            <div class=\"input-group\">                \n                <input type=\"text\" class=\"form-control\" formControlName=\"cantidad\" placeholder=\"Cantidad\">\n            </div>\n        </div>        \n    </div>\n\n    <div class=\"form-group row\">        \n\n        <div class=\"col-sm-9 align-self-end\">\n            <button type=\"submit\" \n                class=\"btn btn-success waves-effect waves-light\"\n                [disabled]=\"inventarioForm.invalid\">\n                <i class=\"fa fa-plus-circle\"></i>\n                Nuevo Inventario\n            </button>            \n        </div>\n    </div>  \n</form>\n\n<div class=\"row animated fadeIn fast\"\n        *ngIf=\"cargandoInventario\">\n    <div class=\"col-12\">\n        <div class=\"alert alert-info text-center\">\n            <h4 class=\"alert-heading\">Cargando</h4>\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\n            <p class=\"mb-0\">Por favor espere</p>           \n        </div>\n                \n    </div>\n</div>\n<div class=\"table-responsive scroll-y\" *ngIf=\"!cargandoInventario\">\n      <span >\n        <table class=\"table m-t-0 table-hover animated fadeIn\">\n            <thead>\n                <tr>\n                    <th>Tienda</th>\n                    \n                    <th>Articulo</th>\n\n                    <th>Categoria</th>\n\n                    <th>Cantidad</th>\n                               \n                    <th>Acciones</th>\n                </tr>\n            </thead>\n            <tbody >                                                 \n                <tr *ngFor=\"let i of inventario\" class=\"footable-odd\">                  \n                    <td>\n                        {{i.NOMBRE_TIENDA}}\n                    </td>\n                    <td>\n                        {{i.NOMBRE_ARTICULO}}\n                    </td>\n                    <td>\n                        {{i.NOMBRE_CATEGORIA}}\n                    </td>\n                    <td>\n                        <input type=\"text\" \n                                class=\"form-control\" \n                                placeholder=\"Cantidad del articulo\"\n                                [(ngModel)]=\"i.CANTIDAD\"\n                        />\n                    </td>\n                    \n                    <td class=\"text-nowrap text-center\">\n                        \n                        <span (click)=\"guardarCambios( i )\" data-toggle=\"tooltip\" data-original-title=\"Guardar cambios\"><i class=\"fa fa-pencil ext-inverse m-r-10 cursor\"></i></span>\n                     \n                    </td>                                            \n                </tr>                                                         \n            </tbody>              \n        </table>\n    </span> \n</div>   \n\n"],"sourceRoot":"webpack:///"}